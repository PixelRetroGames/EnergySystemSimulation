Starting audit...
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\engine\action\ActionAbstract.java:10:37: Parameter unitOfWork should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\engine\action\ActionAbstract.java:15:37: Parameter actionData should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\engine\database\Repository.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\engine\database\Repository.java:18:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\engine\database\RepositoryAbstract.java:3:8: Unused import - ciolty.Implementation.entities.ConsumerData. [UnusedImports]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\engine\database\RepositoryAbstract.java:15:5: Class 'RepositoryAbstract' looks like designed for extension (can be subclassed), but the method 'add' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RepositoryAbstract' final or making the method 'add' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\engine\database\RepositoryAbstract.java:16:21: Parameter key should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\engine\database\RepositoryAbstract.java:16:33: Parameter value should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\engine\database\RepositoryAbstract.java:25:5: Class 'RepositoryAbstract' looks like designed for extension (can be subclassed), but the method 'getAll' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RepositoryAbstract' final or making the method 'getAll' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\engine\server\Server.java:5:8: Unused import - java.util.List. [UnusedImports]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\engine\server\ServerAbstract.java:7:8: Unused import - java.util.List. [UnusedImports]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\ActionTypeFormat.java:4:8: Unused import - ciolty.engine.action.ActionData. [UnusedImports]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\ConsumersChooseContractAction.java:12:5: Class 'ConsumersChooseContractAction' looks like designed for extension (can be subclassed), but the method 'start' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumersChooseContractAction' final or making the method 'start' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\ConsumersChooseContractAction.java:19:5: Class 'ConsumersChooseContractAction' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumersChooseContractAction' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\ConsumersChooseContractAction.java:32:13: Redundant 'final' modifier. [RedundantModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\ConsumersChooseContractAction.java:32:47: Parameter consumer should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\ConsumersCleanContractsAction.java:10:5: Class 'ConsumersCleanContractsAction' looks like designed for extension (can be subclassed), but the method 'start' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumersCleanContractsAction' final or making the method 'start' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\ConsumersCleanContractsAction.java:16:5: Class 'ConsumersCleanContractsAction' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumersCleanContractsAction' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\ConsumersCleanContractsAction.java:26:49: Parameter distributorId should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\ConsumersCleanContractsAction.java:27: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\ConsumersGetPaidAction.java:3:1: Redundant import from the same package - ciolty.Implementation.actions.ImplementedAction. [RedundantImport]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\ConsumersGetPaidAction.java:9:24: Variable 'consumers' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\ConsumersGetPaidAction.java:11:5: Class 'ConsumersGetPaidAction' looks like designed for extension (can be subclassed), but the method 'start' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumersGetPaidAction' final or making the method 'start' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\ConsumersGetPaidAction.java:17:5: Class 'ConsumersGetPaidAction' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumersGetPaidAction' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\ConsumersPayDistributorsAction.java:4:8: Unused import - ciolty.Implementation.entities.ContractData. [UnusedImports]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\ConsumersPayDistributorsAction.java:12:5: Class 'ConsumersPayDistributorsAction' looks like designed for extension (can be subclassed), but the method 'start' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumersPayDistributorsAction' final or making the method 'start' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\ConsumersPayDistributorsAction.java:18:5: Class 'ConsumersPayDistributorsAction' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumersPayDistributorsAction' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\ConsumersPayDistributorsAction.java:26:22: Parameter consumer should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\ConsumersPayDistributorsAction.java:63:28: Parameter consumer should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\ConsumersPayDistributorsAction.java:67:31: Parameter consumer should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\ConsumersPayDistributorsAction.java:72:36: Parameter consumer should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\ConsumersPayDistributorsAction.java:73:44: '1.2' is a magic number. [MagicNumber]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\DistributorCleanContractsAction.java:4:8: Unused import - ciolty.Implementation.entities.ContractData. [UnusedImports]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\DistributorCleanContractsAction.java:10:27: Variable 'distributors' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\DistributorCleanContractsAction.java:12:5: Class 'DistributorCleanContractsAction' looks like designed for extension (can be subclassed), but the method 'start' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorCleanContractsAction' final or making the method 'start' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\DistributorCleanContractsAction.java:18:5: Class 'DistributorCleanContractsAction' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorCleanContractsAction' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\DistributorCleanContractsAction.java:27:42: Parameter distributor should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\DistributorCleanContractsAction.java:35:42: Parameter distributor should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\DistributorSetPriceAction.java:10:5: Class 'DistributorSetPriceAction' looks like designed for extension (can be subclassed), but the method 'start' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorSetPriceAction' final or making the method 'start' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\DistributorSetPriceAction.java:16:5: Class 'DistributorSetPriceAction' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorSetPriceAction' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\DistributorSetPriceAction.java:26:20: Redundant 'final' modifier. [RedundantModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\DistributorSetPriceAction.java:26:50: Parameter distributor should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\DistributorSetPriceAction.java:27:50: '0.2' is a magic number. [MagicNumber]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\DistributorsPayAction.java:3:8: Unused import - ciolty.Implementation.entities.ConsumerData. [UnusedImports]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\DistributorsPayAction.java:11:5: Class 'DistributorsPayAction' looks like designed for extension (can be subclassed), but the method 'start' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorsPayAction' final or making the method 'start' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\DistributorsPayAction.java:17:5: Class 'DistributorsPayAction' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorsPayAction' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\DistributorsPayAction.java:25:22: Parameter distributor should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\DistributorsPayAction.java:39:28: Parameter distributor should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\DistributorsPayAction.java:43:31: Parameter distributor should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\ImplementedAction.java:5:8: Unused import - ciolty.engine.database.UnitOfWork. [UnusedImports]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\MonthEndedAction.java:4:8: Unused import - ciolty.Implementation.entities.ContractData. [UnusedImports]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\MonthEndedAction.java:10:24: Variable 'consumers' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\MonthEndedAction.java:11:27: Variable 'distributors' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\MonthEndedAction.java:13:5: Class 'MonthEndedAction' looks like designed for extension (can be subclassed), but the method 'start' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthEndedAction' final or making the method 'start' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\MonthEndedAction.java:20:5: Class 'MonthEndedAction' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthEndedAction' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\MonthlyUpdateAction.java:11:23: Variable 'data' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\MonthlyUpdateAction.java:12:5: Class 'MonthlyUpdateAction' looks like designed for extension (can be subclassed), but the method 'start' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyUpdateAction' final or making the method 'start' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\MonthlyUpdateAction.java:19:5: Class 'MonthlyUpdateAction' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyUpdateAction' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\MonthlyUpdateAction.java:26:31: Parameter newConsumers should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\actions\MonthlyUpdateAction.java:33:30: Parameter costsChanges should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ConsumerData.java:11:5: Class 'ConsumerData' looks like designed for extension (can be subclassed), but the method 'getBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumerData' final or making the method 'getBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ConsumerData.java:15:5: Class 'ConsumerData' looks like designed for extension (can be subclassed), but the method 'isBankrupt' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumerData' final or making the method 'isBankrupt' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ConsumerData.java:19:5: Class 'ConsumerData' looks like designed for extension (can be subclassed), but the method 'setBankrupt' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumerData' final or making the method 'setBankrupt' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ConsumerData.java:19:29: Parameter bankrupt should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ConsumerData.java:23:5: Class 'ConsumerData' looks like designed for extension (can be subclassed), but the method 'setBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumerData' final or making the method 'setBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ConsumerData.java:23:27: Parameter budget should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ConsumerData.java:27:5: Class 'ConsumerData' looks like designed for extension (can be subclassed), but the method 'getContract' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumerData' final or making the method 'getContract' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ConsumerData.java:31:5: Class 'ConsumerData' looks like designed for extension (can be subclassed), but the method 'setContract' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumerData' final or making the method 'setContract' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ConsumerData.java:31:29: Parameter contract should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ConsumerData.java:35:5: Class 'ConsumerData' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumerData' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ConsumerData.java:39:5: Class 'ConsumerData' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumerData' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ConsumerData.java:39:23: Parameter id should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ConsumerData.java:43:5: Class 'ConsumerData' looks like designed for extension (can be subclassed), but the method 'getInitialBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumerData' final or making the method 'getInitialBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ConsumerData.java:47:5: Class 'ConsumerData' looks like designed for extension (can be subclassed), but the method 'setInitialBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumerData' final or making the method 'setInitialBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ConsumerData.java:47:34: Parameter initialBudget should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ConsumerData.java:51:5: Class 'ConsumerData' looks like designed for extension (can be subclassed), but the method 'getMonthlyIncome' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumerData' final or making the method 'getMonthlyIncome' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ConsumerData.java:55:5: Class 'ConsumerData' looks like designed for extension (can be subclassed), but the method 'setMonthlyIncome' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumerData' final or making the method 'setMonthlyIncome' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ConsumerData.java:55:34: Parameter monthlyIncome should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ConsumerData.java:63:25: Parameter other should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ConsumerData.java:69:25: Parameter id should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ConsumerData.java:69:33: Parameter initialBudget should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ConsumerData.java:69:52: Parameter monthlyIncome should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ConsumerData.java:75:5: Class 'ConsumerData' looks like designed for extension (can be subclassed), but the method 'getUnpaidBill' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumerData' final or making the method 'getUnpaidBill' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ConsumerData.java:79:5: Class 'ConsumerData' looks like designed for extension (can be subclassed), but the method 'setUnpaidBill' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumerData' final or making the method 'setUnpaidBill' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ConsumerData.java:79:31: Parameter unpaidBill should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ContractData.java:9:5: Class 'ContractData' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ContractData' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ContractData.java:11:32: '+' should be on a new line. [OperatorWrap]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ContractData.java:12:44: '+' should be on a new line. [OperatorWrap]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ContractData.java:13:52: '+' should be on a new line. [OperatorWrap]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ContractData.java:14:36: '+' should be on a new line. [OperatorWrap]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ContractData.java:15:70: '+' should be on a new line. [OperatorWrap]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ContractData.java:22:25: Parameter consumerId should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ContractData.java:22:41: Parameter distributorId should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ContractData.java:22:60: Parameter price should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ContractData.java:22:71: Parameter remainedContractMonths should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ContractData.java:29:5: Class 'ContractData' looks like designed for extension (can be subclassed), but the method 'getConsumerId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ContractData' final or making the method 'getConsumerId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ContractData.java:33:5: Class 'ContractData' looks like designed for extension (can be subclassed), but the method 'setConsumerId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ContractData' final or making the method 'setConsumerId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ContractData.java:33:31: Parameter consumerId should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ContractData.java:37:5: Class 'ContractData' looks like designed for extension (can be subclassed), but the method 'getDistributorId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ContractData' final or making the method 'getDistributorId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ContractData.java:41:5: Class 'ContractData' looks like designed for extension (can be subclassed), but the method 'setDistributorId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ContractData' final or making the method 'setDistributorId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ContractData.java:41:34: Parameter distributorId should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ContractData.java:45:5: Class 'ContractData' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ContractData' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ContractData.java:49:5: Class 'ContractData' looks like designed for extension (can be subclassed), but the method 'setPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ContractData' final or making the method 'setPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ContractData.java:49:26: Parameter price should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ContractData.java:53:5: Class 'ContractData' looks like designed for extension (can be subclassed), but the method 'getRemainedContractMonths' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ContractData' final or making the method 'getRemainedContractMonths' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ContractData.java:57:5: Class 'ContractData' looks like designed for extension (can be subclassed), but the method 'setRemainedContractMonths' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ContractData' final or making the method 'setRemainedContractMonths' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\ContractData.java:57:43: Parameter remainedContractMonths should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\CostChangeData.java:4:16: Variable 'id' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\CostChangeData.java:5:16: Variable 'infrastructureCost' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\CostChangeData.java:6:16: Variable 'productionCost' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\CostChangeData.java:8:5: Class 'CostChangeData' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CostChangeData' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\CostChangeData.java:12:5: Class 'CostChangeData' looks like designed for extension (can be subclassed), but the method 'getInfrastructureCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CostChangeData' final or making the method 'getInfrastructureCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\CostChangeData.java:16:5: Class 'CostChangeData' looks like designed for extension (can be subclassed), but the method 'getProductionCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CostChangeData' final or making the method 'getProductionCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\CostChangeData.java:24:27: Parameter id should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\CostChangeData.java:24:35: Parameter infrastructureCost should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\CostChangeData.java:24:59: Parameter productionCost should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\Data.java:8:17: Parameter actionType should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:7:16: Variable 'id' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:8:16: Variable 'contractLength' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:9:16: Variable 'initialBudget' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:10:16: Variable 'initialInfrastructureCost' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:11:16: Variable 'initialProductionCost' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:17:5: Class 'DistributorData' looks like designed for extension (can be subclassed), but the method 'setInfrastructureCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorData' final or making the method 'setInfrastructureCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:17:39: Parameter infrastructureCost should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:21:5: Class 'DistributorData' looks like designed for extension (can be subclassed), but the method 'setProductionCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorData' final or making the method 'setProductionCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:21:35: Parameter productionCost should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:25:5: Class 'DistributorData' looks like designed for extension (can be subclassed), but the method 'setBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorData' final or making the method 'setBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:25:27: Parameter budget should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:29:5: Class 'DistributorData' looks like designed for extension (can be subclassed), but the method 'isBankrupt' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorData' final or making the method 'isBankrupt' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:33:5: Class 'DistributorData' looks like designed for extension (can be subclassed), but the method 'setBankrupt' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorData' final or making the method 'setBankrupt' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:33:29: Parameter bankrupt should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:37:5: Class 'DistributorData' looks like designed for extension (can be subclassed), but the method 'getContractPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorData' final or making the method 'getContractPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:41:5: Class 'DistributorData' looks like designed for extension (can be subclassed), but the method 'setContractPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorData' final or making the method 'setContractPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:41:34: Parameter contractPrice should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:45:5: Class 'DistributorData' looks like designed for extension (can be subclassed), but the method 'getNumberOfClients' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorData' final or making the method 'getNumberOfClients' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:49:5: Class 'DistributorData' looks like designed for extension (can be subclassed), but the method 'getBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorData' final or making the method 'getBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:53:5: Class 'DistributorData' looks like designed for extension (can be subclassed), but the method 'getInfrastructureCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorData' final or making the method 'getInfrastructureCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:57:5: Class 'DistributorData' looks like designed for extension (can be subclassed), but the method 'getProductionCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorData' final or making the method 'getProductionCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:65:28: Parameter other should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:73: Line is longer than 100 characters (found 133). [LineLength]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:73:28: Parameter id should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:73:36: Parameter contractLength should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:73:56: Parameter initialBudget should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:73:75: Parameter initialInfrastructureCost should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:73:106: Parameter initialProductionCost should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:81:5: Class 'DistributorData' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorData' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:85:5: Class 'DistributorData' looks like designed for extension (can be subclassed), but the method 'getContractLength' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorData' final or making the method 'getContractLength' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:89:5: Class 'DistributorData' looks like designed for extension (can be subclassed), but the method 'getInitialBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorData' final or making the method 'getInitialBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:93:5: Class 'DistributorData' looks like designed for extension (can be subclassed), but the method 'getInitialInfrastructureCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorData' final or making the method 'getInitialInfrastructureCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:97:5: Class 'DistributorData' looks like designed for extension (can be subclassed), but the method 'getInitialProductionCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorData' final or making the method 'getInitialProductionCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\DistributorData.java:101:5: Class 'DistributorData' looks like designed for extension (can be subclassed), but the method 'getActiveContracts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorData' final or making the method 'getActiveContracts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\InputData.java:8:16: Variable 'numberOfTurns' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\InputData.java:14: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\InputData.java:14:22: Parameter numberOfTurns should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\InputData.java:14:41: Parameter initialData should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\InputData.java:14:66: Parameter monthlyUpdates should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\InputData.java:20:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'getConsumers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'getConsumers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\InputData.java:24:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'getDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'getDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\InputData.java:29:35: Variable 'consumers' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\InputData.java:30:38: Variable 'distributors' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\InputData.java:36:28: Parameter consumers should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\InputData.java:36:58: Parameter distributors should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\InputData.java:42:24: Variable 'initialData' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\InputData.java:43:36: Variable 'monthlyUpdates' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\InputData.java:45:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'getMonthlyUpdates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'getMonthlyUpdates' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\MonthlyUpdateData.java:6:31: Variable 'newConsumers' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\MonthlyUpdateData.java:7:33: Variable 'costsChanges' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\MonthlyUpdateData.java:9:5: Class 'MonthlyUpdateData' looks like designed for extension (can be subclassed), but the method 'getNewConsumers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyUpdateData' final or making the method 'getNewConsumers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\MonthlyUpdateData.java:13:5: Class 'MonthlyUpdateData' looks like designed for extension (can be subclassed), but the method 'getCostsChanges' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyUpdateData' final or making the method 'getCostsChanges' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\OutputData.java:9:30: Variable 'consumers' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\OutputData.java:10:33: Variable 'distributors' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\OutputData.java:12:5: Class 'OutputData' looks like designed for extension (can be subclassed), but the method 'getConsumers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutputData' final or making the method 'getConsumers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\OutputData.java:16:5: Class 'OutputData' looks like designed for extension (can be subclassed), but the method 'getDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OutputData' final or making the method 'getDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\OutputData.java:23:23: Parameter consumers should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\OutputData.java:23:53: Parameter distributors should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\OutputData.java:25: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\OutputData.java:29:13: Variable 'id' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\OutputData.java:30:17: Variable 'isBankrupt' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\OutputData.java:31:13: Variable 'budget' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\OutputData.java:45:9: Redundant 'public' modifier. [RedundantModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\OutputData.java:48:9: Redundant 'public' modifier. [RedundantModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\OutputData.java:48:35: Parameter data should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\OutputData.java:56:13: Variable 'id' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\OutputData.java:57:13: Variable 'budget' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\OutputData.java:58:17: Variable 'isBankrupt' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\OutputData.java:59:34: Variable 'contracts' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\OutputData.java:77:9: Redundant 'public' modifier. [RedundantModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\OutputData.java:81:9: Redundant 'public' modifier. [RedundantModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\OutputData.java:81:38: Parameter data should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\OutputData.java:91:17: Variable 'consumerId' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\OutputData.java:92:17: Variable 'price' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\OutputData.java:93:17: Variable 'remainedContractMonths' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\OutputData.java:107:13: Redundant 'public' modifier. [RedundantModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\OutputData.java:110:13: Redundant 'public' modifier. [RedundantModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\entities\OutputData.java:110:39: Parameter data should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\JSON\InputReader.java:4:8: Unused import - com.fasterxml.jackson.core.JsonProcessingException. [UnusedImports]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\JSON\InputReader.java:13:12: Variable 'path' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\JSON\InputReader.java:14:24: Parameter path should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\JSON\InputReader.java:18:5: Class 'InputReader' looks like designed for extension (can be subclassed), but the method 'read' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputReader' final or making the method 'read' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\JSON\InputReader.java:18:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\repositories\ConsumerRepository.java:15:5: Class 'ConsumerRepository' looks like designed for extension (can be subclassed), but the method 'getConsumersWithNoActiveContract' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumerRepository' final or making the method 'getConsumersWithNoActiveContract' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\repositories\ConsumerRepository.java:18:36: Parameter object should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\repositories\ConsumerRepository.java:27:5: Class 'ConsumerRepository' looks like designed for extension (can be subclassed), but the method 'getActiveConsumers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ConsumerRepository' final or making the method 'getActiveConsumers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\repositories\ConsumerRepository.java:30:36: Parameter object should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\repositories\DistributorRepository.java:11:34: Parameter resourceManager should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\repositories\DistributorRepository.java:15:5: Class 'DistributorRepository' looks like designed for extension (can be subclassed), but the method 'getActiveDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorRepository' final or making the method 'getActiveDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\repositories\DistributorRepository.java:18:36: Parameter object should be final. [FinalParameters]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\repositories\DistributorRepository.java:24:5: Class 'DistributorRepository' looks like designed for extension (can be subclassed), but the method 'getCheapest' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorRepository' final or making the method 'getCheapest' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\repositories\DistributorRepository.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\repositories\ImplementedUnitOfWork.java:18: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\repositories\ImplementedUnitOfWork.java:24: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\repositories\ImplementedUnitOfWork.java:26: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] E:\JAVA\POO Proiect\.\src\ciolty\Implementation\server\ImplementedServer.java:3:37: Using the '.*' form of import should be avoided - ciolty.Implementation.actions.*. [AvoidStarImport]
[ERROR] E:\JAVA\POO Proiect\.\src\Main.java:9:8: Unused import - java.lang.reflect.WildcardType. [UnusedImports]
[ERROR] E:\JAVA\POO Proiect\.\src\Main.java:11:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] E:\JAVA\POO Proiect\.\src\Main.java:12:16: Variable 'nrTest' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\JAVA\POO Proiect\.\src\Main.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\JAVA\POO Proiect\.\src\Main.java:13:29: Parameter args should be final. [FinalParameters]
Audit done.
Checkstyle ends with 218 errors.
